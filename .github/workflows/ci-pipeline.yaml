name: CI Pipeline
on:
  push:
    branches: [main, 'feature/**']
  pull_request:
    branches: [main]
  # Add workflow_dispatch to enable manual triggering
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod
      component:
        description: 'Component to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - app1
env:
  APP_NAME: app1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/app1

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      CONFIG_REPO_PAT: ${{ secrets.CONFIG_REPO_PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          cd src/app1
          pip install -r requirements.txt
          pip install pytest pytest-cov
          
      - name: Run tests
        run: |
          cd src/app1
          pytest --cov=./ --cov-report=xml || echo "Tests failed but continuing"
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./src/app1/coverage.xml
          fail_ci_if_error: false
  
  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.image-tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./src/app1
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
      
      - name: Set image tag output
        id: image-tag
        run: |
          IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -1)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
  
  update-config:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
      COMPONENT: ${{ github.event.inputs.component || 'all' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Update application configuration
        run: |
          # Checkout the config repository
          git clone https://github.com/triplom/infrastructure-repo-argocd.git
          cd infrastructure-repo-argocd
          
          # Update the image tag in the base deployment
          IMAGE_TAG="${{ needs.build.outputs.image_tag }}"
          
          # If component is 'all' or specifically 'app1', update the config
          if [[ "${{ env.COMPONENT }}" == "all" || "${{ env.COMPONENT }}" == "app1" ]]; then
            echo "Updating app1 deployment for environment: ${{ env.ENVIRONMENT }}"
            if [ -f "apps/app1/${{ env.ENVIRONMENT }}/deployment.yaml" ]; then
              sed -i "s|image: .*/${{ env.APP_NAME }}:.*|image: $IMAGE_TAG|g" apps/app1/${{ env.ENVIRONMENT }}/deployment.yaml
            else
              sed -i "s|image: .*/${{ env.APP_NAME }}:.*|image: $IMAGE_TAG|g" apps/app1/base/deployment.yaml
            fi
          else
            echo "Skipping app1 update as component filter is: ${{ env.COMPONENT }}"
          fi
          
          # Commit and push the changes
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Update image to $IMAGE_TAG for ${{ env.ENVIRONMENT }} environment" || echo "No changes to commit"
          git push https://${{ github.action }}://${{ secrets.GITHUB_TOKEN }}@github.com/triplom/infrastructure-repo-argocd.git main